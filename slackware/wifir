#!/bin/sh
## wifir, an easy way to WPA
## pronounced wifi-er
##
## DOWNLOAD/INSTALL:
## wget -N https://raw.githubusercontent.com/ryanpcmcquen/linuxTweaks/master/slackware/wifir -P /sbin/ && chmod +x /sbin/wifir
##
## put it in /sbin/ and chmod +x it,
## it will be your new best friend
##
## for help on how to use it run:
##   wifir -h
##

## make sure we are root!
if [ ! $UID = 0 ]; then
  cat << EOF
This script must be run as root.
EOF
  exit 1
fi

WIFIRCONF="$HOME/.wifir/${1}.conf"

wpa_wifir_connect_bot () {
  pkill wpa_supplicant
  rfkill unblock all
  echo "Connecting to ${1} ... "
  wpa_supplicant -B -c "${1}" -i wlan0 -D wext
  dhclient wlan0 || dhcpcd
}

## check for networkmanager so we don't
## have a conflict of interest
[ -x /etc/rc.d/rc.networkmanager ] \
  && echo "NetworkManager is executable, please disable it and stop the service." \
  && exit 1

mkdir -p $HOME/.wifir/



echo "           _    __   _       "
echo " __ __ __ (_)  / _| (_)  _ _ "
echo " \ V  V / | | |  _| | | | '_|"
echo "  \_/\_/  |_| |_|   |_| |_|  "
echo "                             "



if [ -z "${1}" ]; then
  for NETWORK in `find $HOME/.wifir/ -name *.conf`; do
    wpa_wifir_connect_bot ${NETWORK} && exit 0
  done
elif [ "${1}" = "-h" ]; then
  echo
  echo "Thank you for choosing wifir!"
  echo
  echo "To connect to a network, run:"
  echo "  wifir ESSID PASSPHRASE"
  echo
  echo "For instance, if you network was called 'foo',"
  echo "and your passphrase was 'bar', the command:"
  echo "  wifir foo bar"
  echo "would connect you to 'foo', and store the"
  echo "configuration for foo in '\$HOME/.wifir/foo.conf'."
  echo
  echo "If you have previously used wifir, you may"
  echo "just run \`wifir\`, and it will attempt to connect"
  echo "to any stored configurations in '\$HOME/.wifir/'."
  echo
  echo
  exit 0
elif [ "${1}" = "-s" ]; then
  iwlist wlan0 scan | grep ESSID
elif [ "${1}" ] && [ -z "${2}" ]; then
  wpa_wifir_connect_bot ${WIFIRCONF} &
elif [ "${2}" ]; then
  wpa_passphrase "${1}" "${2}" > ${WIFIRCONF}
  wpa_wifir_connect_bot ${WIFIRCONF} &
else
  echo "You have supplied an invalid argument. Run \`wifir -h\` for help."
  exit 1
fi
